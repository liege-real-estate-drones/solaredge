// Mocks generated by Mockito 5.4.5 from annotations
// in solaredge_monitor/test/assistant_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:solaredge_monitor/data/models/solar_data.dart' as _i2;
import 'package:solaredge_monitor/data/models/user_preferences.dart' as _i4;
import 'package:solaredge_monitor/data/models/weather_data.dart' as _i8;
import 'package:solaredge_monitor/data/services/solaredge_api_service.dart'
    as _i3;
import 'package:solaredge_monitor/data/services/weather_manager.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSolarData_0 extends _i1.SmartFake implements _i2.SolarData {
  _FakeSolarData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDailySolarData_1 extends _i1.SmartFake
    implements _i2.DailySolarData {
  _FakeDailySolarData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMonthlySolarData_2 extends _i1.SmartFake
    implements _i2.MonthlySolarData {
  _FakeMonthlySolarData_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeYearlySolarData_3 extends _i1.SmartFake
    implements _i2.YearlySolarData {
  _FakeYearlySolarData_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeeklySolarData_4 extends _i1.SmartFake
    implements _i3.WeeklySolarData {
  _FakeWeeklySolarData_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSolarDataRange_5 extends _i1.SmartFake
    implements _i3.SolarDataRange {
  _FakeSolarDataRange_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationSettings_6 extends _i1.SmartFake
    implements _i4.NotificationSettings {
  _FakeNotificationSettings_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDisplaySettings_7 extends _i1.SmartFake
    implements _i4.DisplaySettings {
  _FakeDisplaySettings_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserPreferences_8 extends _i1.SmartFake
    implements _i4.UserPreferences {
  _FakeUserPreferences_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SolarEdgeApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSolarEdgeApiService extends _i1.Mock
    implements _i3.SolarEdgeApiService {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  String get siteId => (super.noSuchMethod(
        Invocation.getter(#siteId),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#siteId),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#siteId),
        ),
      ) as String);

  @override
  _i6.Future<bool> checkConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkConnection,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i2.SolarData> getCurrentPowerData() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPowerData,
          [],
        ),
        returnValue: _i6.Future<_i2.SolarData>.value(_FakeSolarData_0(
          this,
          Invocation.method(
            #getCurrentPowerData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.SolarData>.value(_FakeSolarData_0(
          this,
          Invocation.method(
            #getCurrentPowerData,
            [],
          ),
        )),
      ) as _i6.Future<_i2.SolarData>);

  @override
  _i6.Future<double> getEnergyProducedToday() => (super.noSuchMethod(
        Invocation.method(
          #getEnergyProducedToday,
          [],
        ),
        returnValue: _i6.Future<double>.value(0.0),
        returnValueForMissingStub: _i6.Future<double>.value(0.0),
      ) as _i6.Future<double>);

  @override
  _i6.Future<_i2.DailySolarData> getDailyEnergy(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailyEnergy,
          [date],
        ),
        returnValue: _i6.Future<_i2.DailySolarData>.value(_FakeDailySolarData_1(
          this,
          Invocation.method(
            #getDailyEnergy,
            [date],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.DailySolarData>.value(_FakeDailySolarData_1(
          this,
          Invocation.method(
            #getDailyEnergy,
            [date],
          ),
        )),
      ) as _i6.Future<_i2.DailySolarData>);

  @override
  _i6.Future<List<_i2.SolarData>> getPowerDetailsForDate(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPowerDetailsForDate,
          [date],
        ),
        returnValue: _i6.Future<List<_i2.SolarData>>.value(<_i2.SolarData>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.SolarData>>.value(<_i2.SolarData>[]),
      ) as _i6.Future<List<_i2.SolarData>>);

  @override
  _i6.Future<_i2.MonthlySolarData> getMonthlyEnergy(DateTime? month) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyEnergy,
          [month],
        ),
        returnValue:
            _i6.Future<_i2.MonthlySolarData>.value(_FakeMonthlySolarData_2(
          this,
          Invocation.method(
            #getMonthlyEnergy,
            [month],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.MonthlySolarData>.value(_FakeMonthlySolarData_2(
          this,
          Invocation.method(
            #getMonthlyEnergy,
            [month],
          ),
        )),
      ) as _i6.Future<_i2.MonthlySolarData>);

  @override
  _i6.Future<_i2.YearlySolarData> getYearlyEnergy(int? year) =>
      (super.noSuchMethod(
        Invocation.method(
          #getYearlyEnergy,
          [year],
        ),
        returnValue:
            _i6.Future<_i2.YearlySolarData>.value(_FakeYearlySolarData_3(
          this,
          Invocation.method(
            #getYearlyEnergy,
            [year],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.YearlySolarData>.value(_FakeYearlySolarData_3(
          this,
          Invocation.method(
            #getYearlyEnergy,
            [year],
          ),
        )),
      ) as _i6.Future<_i2.YearlySolarData>);

  @override
  _i6.Future<Map<String, dynamic>> getSiteDetails() => (super.noSuchMethod(
        Invocation.method(
          #getSiteDetails,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<_i3.WeeklySolarData> getWeeklyEnergy(DateTime? dateInWeek) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyEnergy,
          [dateInWeek],
        ),
        returnValue:
            _i6.Future<_i3.WeeklySolarData>.value(_FakeWeeklySolarData_4(
          this,
          Invocation.method(
            #getWeeklyEnergy,
            [dateInWeek],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.WeeklySolarData>.value(_FakeWeeklySolarData_4(
          this,
          Invocation.method(
            #getWeeklyEnergy,
            [dateInWeek],
          ),
        )),
      ) as _i6.Future<_i3.WeeklySolarData>);

  @override
  _i6.Future<(double?, double?)> geocodeSiteAddress(
          Map<String, dynamic>? locationData) =>
      (super.noSuchMethod(
        Invocation.method(
          #geocodeSiteAddress,
          [locationData],
        ),
        returnValue: _i6.Future<(double?, double?)>.value((null, null)),
        returnValueForMissingStub:
            _i6.Future<(double?, double?)>.value((null, null)),
      ) as _i6.Future<(double?, double?)>);

  @override
  _i6.Future<_i3.SolarDataRange> getEnergyRange(
    DateTime? startDate,
    DateTime? endDate, {
    required String? timeUnit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEnergyRange,
          [
            startDate,
            endDate,
          ],
          {#timeUnit: timeUnit},
        ),
        returnValue: _i6.Future<_i3.SolarDataRange>.value(_FakeSolarDataRange_5(
          this,
          Invocation.method(
            #getEnergyRange,
            [
              startDate,
              endDate,
            ],
            {#timeUnit: timeUnit},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.SolarDataRange>.value(_FakeSolarDataRange_5(
          this,
          Invocation.method(
            #getEnergyRange,
            [
              startDate,
              endDate,
            ],
            {#timeUnit: timeUnit},
          ),
        )),
      ) as _i6.Future<_i3.SolarDataRange>);
}

/// A class which mocks [WeatherManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherManager extends _i1.Mock implements _i7.WeatherManager {
  @override
  _i6.Stream<_i8.WeatherData?> get weatherStream => (super.noSuchMethod(
        Invocation.getter(#weatherStream),
        returnValue: _i6.Stream<_i8.WeatherData?>.empty(),
        returnValueForMissingStub: _i6.Stream<_i8.WeatherData?>.empty(),
      ) as _i6.Stream<_i8.WeatherData?>);

  @override
  _i6.Stream<_i8.WeatherForecast?> get forecastStream => (super.noSuchMethod(
        Invocation.getter(#forecastStream),
        returnValue: _i6.Stream<_i8.WeatherForecast?>.empty(),
        returnValueForMissingStub: _i6.Stream<_i8.WeatherForecast?>.empty(),
      ) as _i6.Stream<_i8.WeatherForecast?>);

  @override
  _i6.Stream<(double, double)?> get locationStream => (super.noSuchMethod(
        Invocation.getter(#locationStream),
        returnValue: _i6.Stream<(double, double)?>.empty(),
        returnValueForMissingStub: _i6.Stream<(double, double)?>.empty(),
      ) as _i6.Stream<(double, double)?>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> loadLocation({bool? isInitializing = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadLocation,
          [],
          {#isInitializing: isInitializing},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i8.WeatherData?> getCurrentWeather({
    bool? forceRefresh = true,
    bool? isInitializing = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentWeather,
          [],
          {
            #forceRefresh: forceRefresh,
            #isInitializing: isInitializing,
          },
        ),
        returnValue: _i6.Future<_i8.WeatherData?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.WeatherData?>.value(),
      ) as _i6.Future<_i8.WeatherData?>);

  @override
  _i6.Future<_i8.WeatherForecast?> getWeatherForecast({
    bool? forceRefresh = true,
    bool? isInitializing = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherForecast,
          [],
          {
            #forceRefresh: forceRefresh,
            #isInitializing: isInitializing,
          },
        ),
        returnValue: _i6.Future<_i8.WeatherForecast?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.WeatherForecast?>.value(),
      ) as _i6.Future<_i8.WeatherForecast?>);

  @override
  _i6.Future<_i8.WeatherData?> getHistoricalWeather(DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoricalWeather,
          [date],
        ),
        returnValue: _i6.Future<_i8.WeatherData?>.value(),
        returnValueForMissingStub: _i6.Future<_i8.WeatherData?>.value(),
      ) as _i6.Future<_i8.WeatherData?>);

  @override
  _i6.Future<void> updateLocationAndWeather() => (super.noSuchMethod(
        Invocation.method(
          #updateLocationAndWeather,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPreferences extends _i1.Mock implements _i4.UserPreferences {
  @override
  bool get darkMode => (super.noSuchMethod(
        Invocation.getter(#darkMode),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get displayUnit => (super.noSuchMethod(
        Invocation.getter(#displayUnit),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#displayUnit),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#displayUnit),
        ),
      ) as String);

  @override
  String get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#currency),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#currency),
        ),
      ) as String);

  @override
  _i4.NotificationSettings get notificationSettings => (super.noSuchMethod(
        Invocation.getter(#notificationSettings),
        returnValue: _FakeNotificationSettings_6(
          this,
          Invocation.getter(#notificationSettings),
        ),
        returnValueForMissingStub: _FakeNotificationSettings_6(
          this,
          Invocation.getter(#notificationSettings),
        ),
      ) as _i4.NotificationSettings);

  @override
  _i4.DisplaySettings get displaySettings => (super.noSuchMethod(
        Invocation.getter(#displaySettings),
        returnValue: _FakeDisplaySettings_7(
          this,
          Invocation.getter(#displaySettings),
        ),
        returnValueForMissingStub: _FakeDisplaySettings_7(
          this,
          Invocation.getter(#displaySettings),
        ),
      ) as _i4.DisplaySettings);

  @override
  String get selectedLanguage => (super.noSuchMethod(
        Invocation.getter(#selectedLanguage),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#selectedLanguage),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#selectedLanguage),
        ),
      ) as String);

  @override
  List<String> get favoriteCharts => (super.noSuchMethod(
        Invocation.getter(#favoriteCharts),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);

  @override
  String get weatherLocationSource => (super.noSuchMethod(
        Invocation.getter(#weatherLocationSource),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#weatherLocationSource),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#weatherLocationSource),
        ),
      ) as String);

  @override
  set energyRate(double? value) => super.noSuchMethod(
        Invocation.setter(
          #energyRate,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set peakPowerKw(double? value) => super.noSuchMethod(
        Invocation.setter(
          #peakPowerKw,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set panelTilt(double? value) => super.noSuchMethod(
        Invocation.setter(
          #panelTilt,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set panelOrientation(String? value) => super.noSuchMethod(
        Invocation.setter(
          #panelOrientation,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set washingMachineKw(double? value) => super.noSuchMethod(
        Invocation.setter(
          #washingMachineKw,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultWashingMachineDurationMin(int? value) => super.noSuchMethod(
        Invocation.setter(
          #defaultWashingMachineDurationMin,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set washingMachine2Kw(double? value) => super.noSuchMethod(
        Invocation.setter(
          #washingMachine2Kw,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultWashingMachine2DurationMin(int? value) => super.noSuchMethod(
        Invocation.setter(
          #defaultWashingMachine2DurationMin,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set dryerKw(double? value) => super.noSuchMethod(
        Invocation.setter(
          #dryerKw,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set defaultDryerDurationMin(int? value) => super.noSuchMethod(
        Invocation.setter(
          #defaultDryerDurationMin,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set latitude(double? value) => super.noSuchMethod(
        Invocation.setter(
          #latitude,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set longitude(double? value) => super.noSuchMethod(
        Invocation.setter(
          #longitude,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.UserPreferences copyWith({
    String? solarEdgeApiKey,
    String? siteId,
    String? geminiApiKey,
    String? weatherLocationSource,
    bool? darkMode,
    String? displayUnit,
    String? currency,
    double? energyRate,
    _i4.NotificationSettings? notificationSettings,
    _i4.DisplaySettings? displaySettings,
    String? selectedLanguage,
    List<String>? favoriteCharts,
    double? peakPowerKw,
    double? panelTilt,
    String? panelOrientation,
    double? washingMachineKw,
    int? defaultWashingMachineDurationMin,
    double? washingMachine2Kw,
    int? defaultWashingMachine2DurationMin,
    double? dryerKw,
    int? defaultDryerDurationMin,
    double? latitude,
    double? longitude,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #solarEdgeApiKey: solarEdgeApiKey,
            #siteId: siteId,
            #geminiApiKey: geminiApiKey,
            #weatherLocationSource: weatherLocationSource,
            #darkMode: darkMode,
            #displayUnit: displayUnit,
            #currency: currency,
            #energyRate: energyRate,
            #notificationSettings: notificationSettings,
            #displaySettings: displaySettings,
            #selectedLanguage: selectedLanguage,
            #favoriteCharts: favoriteCharts,
            #peakPowerKw: peakPowerKw,
            #panelTilt: panelTilt,
            #panelOrientation: panelOrientation,
            #washingMachineKw: washingMachineKw,
            #defaultWashingMachineDurationMin: defaultWashingMachineDurationMin,
            #washingMachine2Kw: washingMachine2Kw,
            #defaultWashingMachine2DurationMin:
                defaultWashingMachine2DurationMin,
            #dryerKw: dryerKw,
            #defaultDryerDurationMin: defaultDryerDurationMin,
            #latitude: latitude,
            #longitude: longitude,
          },
        ),
        returnValue: _FakeUserPreferences_8(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #solarEdgeApiKey: solarEdgeApiKey,
              #siteId: siteId,
              #geminiApiKey: geminiApiKey,
              #weatherLocationSource: weatherLocationSource,
              #darkMode: darkMode,
              #displayUnit: displayUnit,
              #currency: currency,
              #energyRate: energyRate,
              #notificationSettings: notificationSettings,
              #displaySettings: displaySettings,
              #selectedLanguage: selectedLanguage,
              #favoriteCharts: favoriteCharts,
              #peakPowerKw: peakPowerKw,
              #panelTilt: panelTilt,
              #panelOrientation: panelOrientation,
              #washingMachineKw: washingMachineKw,
              #defaultWashingMachineDurationMin:
                  defaultWashingMachineDurationMin,
              #washingMachine2Kw: washingMachine2Kw,
              #defaultWashingMachine2DurationMin:
                  defaultWashingMachine2DurationMin,
              #dryerKw: dryerKw,
              #defaultDryerDurationMin: defaultDryerDurationMin,
              #latitude: latitude,
              #longitude: longitude,
            },
          ),
        ),
        returnValueForMissingStub: _FakeUserPreferences_8(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #solarEdgeApiKey: solarEdgeApiKey,
              #siteId: siteId,
              #geminiApiKey: geminiApiKey,
              #weatherLocationSource: weatherLocationSource,
              #darkMode: darkMode,
              #displayUnit: displayUnit,
              #currency: currency,
              #energyRate: energyRate,
              #notificationSettings: notificationSettings,
              #displaySettings: displaySettings,
              #selectedLanguage: selectedLanguage,
              #favoriteCharts: favoriteCharts,
              #peakPowerKw: peakPowerKw,
              #panelTilt: panelTilt,
              #panelOrientation: panelOrientation,
              #washingMachineKw: washingMachineKw,
              #defaultWashingMachineDurationMin:
                  defaultWashingMachineDurationMin,
              #washingMachine2Kw: washingMachine2Kw,
              #defaultWashingMachine2DurationMin:
                  defaultWashingMachine2DurationMin,
              #dryerKw: dryerKw,
              #defaultDryerDurationMin: defaultDryerDurationMin,
              #latitude: latitude,
              #longitude: longitude,
            },
          ),
        ),
      ) as _i4.UserPreferences);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
